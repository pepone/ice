<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup Condition="'$(Configuration)' == ''">
        <Configuration>Release</Configuration>
    </PropertyGroup>
    <PropertyGroup>
        <CppPlatform Condition="'$(Platform)' == 'x64'">x64</CppPlatform>
        <CppPlatform Condition="'$(Platform)' == 'x86' or '$(Platform)' == 'Win32'">Win32</CppPlatform>

        <UwpPlatform Condition="'$(Platform)' == 'x64'">x64</UwpPlatform>
        <UwpPlatform Condition="'$(Platform)' == 'x86' or '$(Platform)' == 'Win32'">x86</UwpPlatform>

        <DefaultPlatformToolset Condition="'$(VisualStudioVersion)' == '16.0'">v142</DefaultPlatformToolset>
    </PropertyGroup>

    <Import Project="$(MSBuildThisFileDirectory)\..\..\config\icebuilder.props" />

    <Import Project="$(MSBuildThisFileDirectory)\..\..\config\ice.common.targets" />

    <Target Name="RemovePackages">
      <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)packages" Condition="Exists('$(MSBuildThisFileDirectory)packages')" />
    </Target>

   <!-- Targets required to build Slice compilers -->
    <Choose>
        <When Condition="'$(OS)' != 'Windows_NT'">
            <ItemGroup>
                <SliceCompilers Include="slice2cs"/>
            </ItemGroup>
        </When>

        <Otherwise>
            <ItemGroup>
                <SliceCompilers Include="slice2cs"/>
            </ItemGroup>
        </Otherwise>
    </Choose>

    <Target Name="SliceCompilers" Condition="'$(ICE_BIN_DIST)' != 'all'">
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\..\cpp\msbuild\ice.proj"
                 Targets="NuGetRestore"
                 BuildInParallel="true"
                 Condition="'$(OS)' == 'Windows_NT'"/>

        <MSBuild Projects="$(MSBuildThisFileDirectory)..\..\cpp\msbuild\ice.sln"
                 Targets="@(SliceCompilers)"
                 BuildInParallel="true"
                 Properties="Platform=$(CppPlatform);Configuration=$(Configuration)"
                 Condition="'$(OS)' == 'Windows_NT'"/>

        <Exec Command="make @(SliceCompilers->'%(Identity)', ' ')"
              WorkingDirectory="$(MSBuildThisFileDirectory)..\..\cpp"
              Condition="'$(OS)' != 'Windows_NT'"/>
    </Target>

    <ItemGroup>
        <DistSolution Include="ice.sln">
          <Properties>Configuration=$(Configuration);Platform=Any CPU;CppPlatform=$(CppPlatform)</Properties>
        </DistSolution>

        <TestSolution Include="ice.test.sln">
          <Properties>Configuration=$(Configuration);Platform=Any CPU;CppPlatform=$(CppPlatform)</Properties>
        </TestSolution>
    </ItemGroup>

    <Target Name="NuGetRestoreDist" Condition="'$(ICE_BIN_DIST)' != 'all'">
        <MSBuild Projects="@(DistSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"
                 Targets="Restore" />
    </Target>

    <Target Name="BuildDist"
            DependsOnTargets="SliceCompilers;NuGetRestoreDist"
            Condition="'$(ICE_BIN_DIST)' != 'all'">

        <MSBuild Projects="@(DistSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"/>

    </Target>

    <Target Name="CleanDist" Condition="'$(ICE_BIN_DIST)' != 'all'">

        <MSBuild Projects="@(DistSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"
                 Targets="Clean" />

    </Target>

    <Target Name="NuGetRestore" DependsOnTargets="NuGetRestoreDist">
        <MSBuild Projects="@(TestSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"
                 Targets="Restore"/>
    </Target>

    <Target Name="Build" DependsOnTargets="BuildDist;NuGetRestore">

        <MSBuild Projects="@(TestSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"/>

    </Target>

    <Target Name="Clean" DependsOnTargets="CleanDist">

        <MSBuild Projects="@(TestSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"
                 Targets="Clean" />

    </Target>

    <Target Name="WindowsNuGetPack" DependsOnTargets="BuildDist" Condition="'$(OS)' == 'Windows_NT'">
        <RemoveDir Directories="zeroc.ice.net" />

        <MSBuild Projects="ice.nuget.targets"
                 Properties="PackageDirectory=zeroc.ice.net;CppPlatform=$(CppPlatform);Configuration=$(Configuration)"/>

        <Copy SourceFiles="zeroc.ice.net.nuspec"
              DestinationFolder="zeroc.ice.net" />

        <Copy SourceFiles="$(MSBuildThisFileDirectory)THIRD_PARTY_LICENSE.txt"
              DestinationFiles="zeroc.ice.net\THIRD_PARTY_LICENSE.txt" />

        <Copy SourceFiles="$(MSBuildThisFileDirectory)..\..\ICE_LICENSE"
              DestinationFiles="zeroc.ice.net\ICE_LICENSE.txt" />

        <Copy SourceFiles="$(MSBuildThisFileDirectory)..\..\LICENSE"
              DestinationFiles="zeroc.ice.net\LICENSE.txt" />

        <Copy SourceFiles="zeroc.ice.net.props"
              DestinationFiles="zeroc.ice.net\build\zeroc.ice.net.props"/>

        <Exec Command="$(NuGetExe) pack -NoPackageAnalysis -NonInteractive"
              WorkingDirectory="zeroc.ice.net"/>
    </Target>

    <Target Name="UnixNuGetPack" DependsOnTargets="BuildDist" Condition="'$(OS)' != 'Windows_NT'">
        <RemoveDir Directories="zeroc.ice.net" />
        <MSBuild Projects="zeroc.ice.net.csproj" Targets="Restore;Pack"/>
        <RemoveDir Directories="obj"/>
        <Delete Files="zeroc.ice.net\zeroc.ice.net.deps.json;zeroc.ice.net\zeroc.ice.net.dll;zeroc.ice.net\zeroc.ice.net.pdb"/>
    </Target>

    <Target Name="NuGetPack"
            DependsOnTargets="WindowsNuGetPack;UnixNuGetPack">
    </Target>

    <!-- UWP Xamarin Builds -->
    <Target Name="UWPXamarinBuild" DependsOnTargets="BuildDist" Condition="'$(OS)' == 'Windows_NT'">
        <Exec Command="$(NuGetExe) restore $(MSBuildThisFileDirectory)ice.xamarin.test.sln" />
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\test\xamarin\controller.UWP\controller.UWP.csproj"
                 Properties="Configuration=$(Configuration);Platform=$(UWPPlatform)"/>
    </Target>

    <!-- Android Xamarin Builds -->
    <Target Name="AndroidXamarinBuildOnWindows" DependsOnTargets="BuildDist" Condition="'$(OS)' == 'Windows_NT'">
        <Exec Command="$(NuGetExe) restore $(MSBuildThisFileDirectory)ice.xamarin.test.sln" />
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\test\xamarin\controller.Android\controller.Android.csproj"
                 Properties="Configuration=$(Configuration);Platform=AnyCPU"
                 Targets="SignAndroidPackage"/>
    </Target>

    <Target Name="AndroidXamarinBuildOnMac" DependsOnTargets="" Condition="'$(OS)' == 'Unix'">
        <!-- We use exec to build the distribution instead of adding it to the DependsOnTargets as we have to use
             "dotnet msbuid" to build the distribution and "msbuild" from Visual Studio to build the test controller -->
        <Exec Command="dotnet msbuild $(MSBuildThisFileDirectory)ice.proj /t:BuildDist" />
        <Exec Command="nuget restore $(MSBuildThisFileDirectory)ice.xamarin.test.sln" />
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\test\xamarin\controller.Android\controller.Android.csproj"
                 Properties="Configuration=$(Configuration);Platform=AnyCPU"
                 Targets="SignAndroidPackage"/>
    </Target>

    <Target Name="AndroidXamarinBuild" DependsOnTargets="AndroidXamarinBuildOnWindows;AndroidXamarinBuildOnMac"/>

    <!-- iOS Xamarin Builds -->
    <Target Name="iOSXamarinBuild" Condition="'$(OS)' == 'Unix'">
        <!-- We use exec to build the distribution instead of adding it to the DependsOnTargets as we have to use
             "dotnet msbuid" to build the distribution and "msbuild" from Visual Studio to build the test controller -->
        <Exec Command="dotnet msbuild $(MSBuildThisFileDirectory)ice.proj /t:BuildDist" />
        <Exec Command="nuget restore $(MSBuildThisFileDirectory)ice.xamarin.test.sln" />
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\test\xamarin\controller.iOS\controller.iOS.csproj"
                 Properties="Configuration=$(Configuration)"/>
    </Target>

    <Target Name="BuildDoc" DependsOnTargets="BuildDist">
        <Exec Command="docfx" WorkingDirectory="$(MSBuildThisFileDirectory)..\doc"/>
    </Target>
</Project>
