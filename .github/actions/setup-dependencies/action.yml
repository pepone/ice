name: Setup Dependencies

runs:
  using: "composite"
  steps:
    # Python3 is already installed though Homebrew
    - name: Install brew dependencies
      run: brew install ruby openjdk node php lmdb mcpp || true
      shell: bash
      if: runner.os == 'macOS'

    - name: Add Ruby and Python interpreters from brew to PATH
      run: |
        echo "$(brew --prefix ruby)/bin" >> $GITHUB_PATH
        echo "$(brew --prefix python3)/bin" >> $GITHUB_PATH
      shell: bash
      if: runner.os == 'macOS'

    - name: Install xcodeproj gem
      run: gem install xcodeproj
      shell: bash
      if: runner.os == 'macOS'

    - name: Install xcodesdk dependencies
      run: |
        # We should consider removing the dependency on ice-xcode-builder
        brew install zeroc-ice/tap/ice-builder-xcode
        CFLAGS='-Wno-implicit-function-declaration' python3 -m pip install zeroc-ice
      shell: bash
      if: (runner.os == 'macOS') && (matrix.name == 'xcodesdk')

    - name: Install apt dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y \
            python3 python3-pip nodejs libbz2-dev libssl-dev libffi-dev \
            libmcpp-dev libedit-dev liblmdb-dev libexpat1-dev libsystemd-dev openjdk-17-jdk \
            ruby ruby-dev php-cli php-dev \
            libbluetooth-dev libdbus-1-dev \
            libsystemd-dev

      shell: bash
      if: runner.os == 'Linux'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        msbuild-architecture: x64
      if: runner.os == 'Windows'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
      if: runner.os == 'Windows'

    - name: Configure Windows Python Environment
      run: |
        echo "PythonHome=$env:Python_ROOT_DIR"  >> $env:GITHUB_ENV
      shell: powershell
      if: runner.os == 'Windows'

    - name: Install testing dependencies from pip
      run: python3 -m pip install passlib cryptography numpy
      shell: bash
      if: runner.os == 'macOS' || runner.os == 'Linux'

    - name: Install testing dependencies from pip
      run: python3 -m pip install passlib cryptography numpy
      shell: powershell
      if: runner.os == 'Windows'

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        # create-symlink: true
        default: false
        key: ci-${{ runner.os }}-${{matrix.name || matrix.language }}-${{ github.sha }}
        restore-keys: |
          ci-${{ runner.os }}-${{matrix.name || matrix.language }}-
          ci-${{ runner.os }}-
      if: runner.os == 'macOS' || runner.os == 'Linux'

    - name: Configure ccache path
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        echo "/opt/homebrew/opt/ccache/libexec" >> $GITHUB_PATH
      shell: bash
      if: runner.os == 'macOS' || runner.os == 'Linux'

    - name: Setup Windows Cache
      uses: actions/cache@v4
      with:
        path: |
          **/bin/x64
          **/lib/x64
          **/msbuild/**/x64
          **/include/generated

        key: ci-${{ runner.os }}-${{matrix.name || matrix.language }}-${{ github.sha }}
        restore-keys: |
          ci-${{ runner.os }}-${{matrix.name || matrix.language }}-
          ci-${{ runner.os }}-
      if: runner.os == 'Windows'
