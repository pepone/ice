name: "Azure Signing Test"

on:
    workflow_dispatch:
    push:
      branches: ["azure-code-signing-test"]

jobs:
  test-signing:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup C++
        uses: ./.github/actions/setup-cpp

      - name: Setup .NET
        uses: ./.github/actions/setup-dotnet

      - name: Pack .NET Packages
        run: dotnet msbuild csharp\msbuild\ice.proj /t:BuildDist /p:Configuration=Release

      - name: Collect Files to Sign
        run: |
          Get-ChildItem -Path src -Directory | ForEach-Object {
              $name = $_.Name
              "src\$name\bin\Release\net8.0\$name.dll"
          } | Set-Content -Path ${{ github.workspace }}\catalog.txt -Encoding UTF8

      - name: Sign .NET Assemblies with Trusted Signing
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: zeroc
          certificate-profile-name: zeroc-ice
          files-catalog: ${{ github.workspace }}\catalog.txt
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Pack .NET Packages
        run: dotnet msbuild csharp\msbuild\ice.proj /t:Pack /p:Configuration=Release

      - name: Upload NuGet Packages
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-nuget-packages
          path: |
            csharp/src/**/bin/Release/*.nupkg
            csharp/src/**/bin/Release/*.snupkg
            tools/ZeroC.Ice.Slice.Tools.CSharp/bin/Release/*.nupkg
            tools/ZeroC.Ice.Slice.Tools.CSharp/bin/Release/*.snupkg
