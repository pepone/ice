// Copyright (c) ZeroC, Inc. All rights reserved.

// Generated by makeprops.py from PropertyNames.xml, Fri May 17 12:27:43 2024

// IMPORTANT: Do not edit this file -- any edits made here will be lost!

package com.zeroc.IceInternal;

public final class PropertyNames {
  public static final Property IceProps[] = {
    new Property("Ice.AcceptClassCycles", false, "0", false),
    new Property("Ice.ACM.Client", false, "", true),
    new Property("Ice.ACM.Server", false, "", true),
    new Property("Ice.ACM.Timeout", false, "", false),
    new Property("Ice.ACM.Heartbeat", false, "", false),
    new Property("Ice.ACM.Close", false, "", false),
    new Property("Ice.ACM", false, "", false),
    new Property("Ice.ACM.Client.Timeout", false, "", false),
    new Property("Ice.ACM.Client.Heartbeat", false, "", false),
    new Property("Ice.ACM.Client.Close", false, "", false),
    new Property("Ice.ACM.Client", false, "", false),
    new Property("Ice.ACM.Server.Timeout", false, "", false),
    new Property("Ice.ACM.Server.Heartbeat", false, "", false),
    new Property("Ice.ACM.Server.Close", false, "", false),
    new Property("Ice.ACM.Server", false, "", false),
    new Property("Ice.Admin.ACM.Timeout", false, "", false),
    new Property("Ice.Admin.ACM.Heartbeat", false, "", false),
    new Property("Ice.Admin.ACM.Close", false, "", false),
    new Property("Ice.Admin.ACM", false, "", false),
    new Property("Ice.Admin.AdapterId", false, "", false),
    new Property("Ice.Admin.Connection.CloseTimeout", false, "10", false),
    new Property("Ice.Admin.Connection.ConnectTimeout", false, "10", false),
    new Property("Ice.Admin.Connection.EnableIdleCheck", false, "1", false),
    new Property("Ice.Admin.Connection.IdleTimeout", false, "60", false),
    new Property("Ice.Admin.Connection.InactivityTimeout", false, "300", false),
    new Property("Ice.Admin.Connection", false, "", false),
    new Property("Ice.Admin.Endpoints", false, "", false),
    new Property("Ice.Admin.Locator.EndpointSelection", false, "", false),
    new Property("Ice.Admin.Locator.ConnectionCached", false, "", false),
    new Property("Ice.Admin.Locator.PreferSecure", false, "", false),
    new Property("Ice.Admin.Locator.LocatorCacheTimeout", false, "", false),
    new Property("Ice.Admin.Locator.InvocationTimeout", false, "", false),
    new Property("Ice.Admin.Locator.Locator", false, "", false),
    new Property("Ice.Admin.Locator.Router", false, "", false),
    new Property("Ice.Admin.Locator.CollocationOptimized", false, "", false),
    new Property("Ice\\.Admin\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("Ice.Admin.Locator", false, "", false),
    new Property("Ice.Admin.PublishedEndpoints", false, "", false),
    new Property("Ice.Admin.ReplicaGroupId", false, "", false),
    new Property("Ice.Admin.Router.EndpointSelection", false, "", false),
    new Property("Ice.Admin.Router.ConnectionCached", false, "", false),
    new Property("Ice.Admin.Router.PreferSecure", false, "", false),
    new Property("Ice.Admin.Router.LocatorCacheTimeout", false, "", false),
    new Property("Ice.Admin.Router.InvocationTimeout", false, "", false),
    new Property("Ice.Admin.Router.Locator", false, "", false),
    new Property("Ice.Admin.Router.Router", false, "", false),
    new Property("Ice.Admin.Router.CollocationOptimized", false, "", false),
    new Property("Ice\\.Admin\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("Ice.Admin.Router", false, "", false),
    new Property("Ice.Admin.ProxyOptions", false, "", false),
    new Property("Ice.Admin.ThreadPool.Size", false, "1", false),
    new Property("Ice.Admin.ThreadPool.SizeMax", false, "", false),
    new Property("Ice.Admin.ThreadPool.SizeWarn", false, "0", false),
    new Property("Ice.Admin.ThreadPool.StackSize", false, "0", false),
    new Property("Ice.Admin.ThreadPool.Serialize", false, "0", false),
    new Property("Ice.Admin.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("Ice.Admin.ThreadPool.ThreadPriority", false, "", false),
    new Property("Ice.Admin.MessageSizeMax", false, "", false),
    new Property("Ice.Admin.DelayCreation", false, "0", false),
    new Property("Ice.Admin.Enabled", false, "", false),
    new Property("Ice.Admin.Facets", false, "", false),
    new Property("Ice.Admin.InstanceName", false, "", false),
    new Property("Ice.Admin.Logger.KeepLogs", false, "100", false),
    new Property("Ice.Admin.Logger.KeepTraces", false, "100", false),
    new Property("Ice.Admin.Logger.Properties", false, "", false),
    new Property("Ice.Admin.ServerId", false, "", false),
    new Property("Ice.BackgroundLocatorCacheUpdates", false, "0", false),
    new Property("Ice.BatchAutoFlush", false, "", true),
    new Property("Ice.BatchAutoFlushSize", false, "1024", false),
    new Property("Ice.ChangeUser", false, "", false),
    new Property("Ice.ClassGraphDepthMax", false, "100", false),
    new Property("Ice.Compression.Level", false, "1", false),
    new Property("Ice.Config", false, "", false),
    new Property("Ice.Connection.CloseTimeout", false, "10", false),
    new Property("Ice.Connection.ConnectTimeout", false, "10", false),
    new Property("Ice.Connection.EnableIdleCheck", false, "1", false),
    new Property("Ice.Connection.IdleTimeout", false, "60", false),
    new Property("Ice.Connection.InactivityTimeout", false, "300", false),
    new Property("Ice.Connection", false, "", false),
    new Property("Ice.ConsoleListener", false, "1", false),
    new Property("Ice.Default.CollocationOptimized", false, "1", false),
    new Property("Ice.Default.EncodingVersion", false, "1.1", false),
    new Property("Ice.Default.EndpointSelection", false, "Random", false),
    new Property("Ice.Default.Host", false, "", false),
    new Property("Ice.Default.Locator.EndpointSelection", false, "", false),
    new Property("Ice.Default.Locator.ConnectionCached", false, "", false),
    new Property("Ice.Default.Locator.PreferSecure", false, "", false),
    new Property("Ice.Default.Locator.LocatorCacheTimeout", false, "", false),
    new Property("Ice.Default.Locator.InvocationTimeout", false, "", false),
    new Property("Ice.Default.Locator.Locator", false, "", false),
    new Property("Ice.Default.Locator.Router", false, "", false),
    new Property("Ice.Default.Locator.CollocationOptimized", false, "", false),
    new Property("Ice\\.Default\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("Ice.Default.Locator", false, "", false),
    new Property("Ice.Default.LocatorCacheTimeout", false, "-1", false),
    new Property("Ice.Default.InvocationTimeout", false, "-1", false),
    new Property("Ice.Default.Package", false, "", false),
    new Property("Ice.Default.PreferSecure", false, "0", false),
    new Property("Ice.Default.Protocol", false, "tcp", false),
    new Property("Ice.Default.Router.EndpointSelection", false, "", false),
    new Property("Ice.Default.Router.ConnectionCached", false, "", false),
    new Property("Ice.Default.Router.PreferSecure", false, "", false),
    new Property("Ice.Default.Router.LocatorCacheTimeout", false, "", false),
    new Property("Ice.Default.Router.InvocationTimeout", false, "", false),
    new Property("Ice.Default.Router.Locator", false, "", false),
    new Property("Ice.Default.Router.Router", false, "", false),
    new Property("Ice.Default.Router.CollocationOptimized", false, "", false),
    new Property("Ice\\.Default\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("Ice.Default.Router", false, "", false),
    new Property("Ice.Default.SlicedFormat", false, "0", false),
    new Property("Ice.Default.SourceAddress", false, "", false),
    new Property("Ice.Default.Timeout", false, "60000", false),
    new Property("Ice.EventLog.Source", false, "", false),
    new Property("Ice.FactoryAssemblies", false, "", false),
    new Property("Ice.HTTPProxyHost", false, "", false),
    new Property("Ice.HTTPProxyPort", false, "1080", false),
    new Property("Ice.ImplicitContext", false, "None", false),
    new Property("Ice.InitPlugins", false, "1", false),
    new Property("Ice.IPv4", false, "1", false),
    new Property("Ice.IPv6", false, "1", false),
    new Property("Ice.LogFile", false, "", false),
    new Property("Ice.LogFile.SizeMax", false, "0", false),
    new Property("Ice.LogStdErr.Convert", false, "1", false),
    new Property("Ice.MessageSizeMax", false, "1024", false),
    new Property("Ice.Nohup", false, "1", false),
    new Property("Ice.Override.CloseTimeout", false, "", false),
    new Property("Ice.Override.Compress", false, "", false),
    new Property("Ice.Override.ConnectTimeout", false, "", false),
    new Property("Ice.Override.Timeout", false, "", false),
    new Property("Ice.Override.Secure", false, "", false),
    new Property("Ice\\.Package\\.[^\\s]+", true, "", false),
    new Property("Ice\\.Plugin\\.[^\\s]+", true, "", false),
    new Property("Ice.PluginLoadOrder", false, "", false),
    new Property("Ice.PreferIPv6Address", false, "0", false),
    new Property("Ice.PreloadAssemblies", false, "0", false),
    new Property("Ice.PrintAdapterReady", false, "", false),
    new Property("Ice.PrintProcessId", false, "", false),
    new Property("Ice.PrintStackTraces", false, "0", false),
    new Property("Ice.ProgramName", false, "", false),
    new Property("Ice.RetryIntervals", false, "0", false),
    new Property("Ice.ServerIdleTime", false, "0", false),
    new Property("Ice.SOCKSProxyHost", false, "", false),
    new Property("Ice.SOCKSProxyPort", false, "1080", false),
    new Property("Ice.StdErr", false, "", false),
    new Property("Ice.StdOut", false, "", false),
    new Property("Ice.SyslogFacility", false, "LOG_USER", false),
    new Property("Ice.ThreadPool.Client.Size", false, "1", false),
    new Property("Ice.ThreadPool.Client.SizeMax", false, "", false),
    new Property("Ice.ThreadPool.Client.SizeWarn", false, "0", false),
    new Property("Ice.ThreadPool.Client.StackSize", false, "0", false),
    new Property("Ice.ThreadPool.Client.Serialize", false, "0", false),
    new Property("Ice.ThreadPool.Client.ThreadIdleTime", false, "60", false),
    new Property("Ice.ThreadPool.Client.ThreadPriority", false, "", false),
    new Property("Ice.ThreadPool.Server.Size", false, "1", false),
    new Property("Ice.ThreadPool.Server.SizeMax", false, "", false),
    new Property("Ice.ThreadPool.Server.SizeWarn", false, "0", false),
    new Property("Ice.ThreadPool.Server.StackSize", false, "0", false),
    new Property("Ice.ThreadPool.Server.Serialize", false, "0", false),
    new Property("Ice.ThreadPool.Server.ThreadIdleTime", false, "60", false),
    new Property("Ice.ThreadPool.Server.ThreadPriority", false, "", false),
    new Property("Ice.ThreadPriority", false, "", false),
    new Property("Ice.ToStringMode", false, "Unicode", false),
    new Property("Ice.Trace.Admin.Properties", false, "0", false),
    new Property("Ice.Trace.Admin.Logger", false, "0", false),
    new Property("Ice.Trace.Locator", false, "0", false),
    new Property("Ice.Trace.Network", false, "0", false),
    new Property("Ice.Trace.Protocol", false, "0", false),
    new Property("Ice.Trace.Retry", false, "0", false),
    new Property("Ice.Trace.Slicing", false, "0", false),
    new Property("Ice.Trace.ThreadPool", false, "0", false),
    new Property("Ice.UDP.RcvSize", false, "", false),
    new Property("Ice.UDP.SndSize", false, "", false),
    new Property("Ice.TCP.Backlog", false, "", false),
    new Property("Ice.TCP.RcvSize", false, "", false),
    new Property("Ice.TCP.SndSize", false, "", false),
    new Property("Ice.UseApplicationClassLoader", false, "", false),
    new Property("Ice.UseOSLog", false, "0", false),
    new Property("Ice.UseSyslog", false, "0", false),
    new Property("Ice.UseSystemdJournal", false, "0", false),
    new Property("Ice.Warn.AMICallback", false, "1", false),
    new Property("Ice.Warn.Connections", false, "0", false),
    new Property("Ice.Warn.Datagrams", false, "0", false),
    new Property("Ice.Warn.Dispatch", false, "1", false),
    new Property("Ice.Warn.Endpoints", false, "1", false),
    new Property("Ice.Warn.UnknownProperties", false, "1", false),
    new Property("Ice.Warn.UnusedProperties", false, "0", false),
    new Property("Ice.CacheMessageBuffers", false, "2", false),
    new Property("Ice.ThreadInterruptSafe", false, "", false),
    null
  };

  public static final Property IceMXProps[] = {
    new Property("IceMX\\.Metrics\\.[^\\s]+\\.GroupBy", true, "", false),
    new Property("IceMX\\.Metrics\\.[^\\s]+\\.Map", true, "", false),
    new Property("IceMX\\.Metrics\\.[^\\s]+\\.RetainDetached", true, "10", false),
    new Property("IceMX\\.Metrics\\.[^\\s]+\\.Accept", true, "", false),
    new Property("IceMX\\.Metrics\\.[^\\s]+\\.Reject", true, "", false),
    new Property("IceMX\\.Metrics\\.[^\\s]+", true, "", false),
    null
  };

  public static final Property IceDiscoveryProps[] = {
    new Property("IceDiscovery.Multicast.ACM.Timeout", false, "", false),
    new Property("IceDiscovery.Multicast.ACM.Heartbeat", false, "", false),
    new Property("IceDiscovery.Multicast.ACM.Close", false, "", false),
    new Property("IceDiscovery.Multicast.ACM", false, "", false),
    new Property("IceDiscovery.Multicast.AdapterId", false, "", false),
    new Property("IceDiscovery.Multicast.Connection.CloseTimeout", false, "10", false),
    new Property("IceDiscovery.Multicast.Connection.ConnectTimeout", false, "10", false),
    new Property("IceDiscovery.Multicast.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceDiscovery.Multicast.Connection.IdleTimeout", false, "60", false),
    new Property("IceDiscovery.Multicast.Connection.InactivityTimeout", false, "300", false),
    new Property("IceDiscovery.Multicast.Connection", false, "", false),
    new Property("IceDiscovery.Multicast.Endpoints", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.PreferSecure", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.Locator", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.Router", false, "", false),
    new Property("IceDiscovery.Multicast.Locator.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Multicast\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Multicast.Locator", false, "", false),
    new Property("IceDiscovery.Multicast.PublishedEndpoints", false, "", false),
    new Property("IceDiscovery.Multicast.ReplicaGroupId", false, "", false),
    new Property("IceDiscovery.Multicast.Router.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Multicast.Router.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Multicast.Router.PreferSecure", false, "", false),
    new Property("IceDiscovery.Multicast.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Multicast.Router.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Multicast.Router.Locator", false, "", false),
    new Property("IceDiscovery.Multicast.Router.Router", false, "", false),
    new Property("IceDiscovery.Multicast.Router.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Multicast\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Multicast.Router", false, "", false),
    new Property("IceDiscovery.Multicast.ProxyOptions", false, "", false),
    new Property("IceDiscovery.Multicast.ThreadPool.Size", false, "1", false),
    new Property("IceDiscovery.Multicast.ThreadPool.SizeMax", false, "", false),
    new Property("IceDiscovery.Multicast.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceDiscovery.Multicast.ThreadPool.StackSize", false, "0", false),
    new Property("IceDiscovery.Multicast.ThreadPool.Serialize", false, "0", false),
    new Property("IceDiscovery.Multicast.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceDiscovery.Multicast.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceDiscovery.Multicast.MessageSizeMax", false, "", false),
    new Property("IceDiscovery.Reply.ACM.Timeout", false, "", false),
    new Property("IceDiscovery.Reply.ACM.Heartbeat", false, "", false),
    new Property("IceDiscovery.Reply.ACM.Close", false, "", false),
    new Property("IceDiscovery.Reply.ACM", false, "", false),
    new Property("IceDiscovery.Reply.AdapterId", false, "", false),
    new Property("IceDiscovery.Reply.Connection.CloseTimeout", false, "10", false),
    new Property("IceDiscovery.Reply.Connection.ConnectTimeout", false, "10", false),
    new Property("IceDiscovery.Reply.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceDiscovery.Reply.Connection.IdleTimeout", false, "60", false),
    new Property("IceDiscovery.Reply.Connection.InactivityTimeout", false, "300", false),
    new Property("IceDiscovery.Reply.Connection", false, "", false),
    new Property("IceDiscovery.Reply.Endpoints", false, "", false),
    new Property("IceDiscovery.Reply.Locator.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Reply.Locator.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Reply.Locator.PreferSecure", false, "", false),
    new Property("IceDiscovery.Reply.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Reply.Locator.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Reply.Locator.Locator", false, "", false),
    new Property("IceDiscovery.Reply.Locator.Router", false, "", false),
    new Property("IceDiscovery.Reply.Locator.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Reply\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Reply.Locator", false, "", false),
    new Property("IceDiscovery.Reply.PublishedEndpoints", false, "", false),
    new Property("IceDiscovery.Reply.ReplicaGroupId", false, "", false),
    new Property("IceDiscovery.Reply.Router.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Reply.Router.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Reply.Router.PreferSecure", false, "", false),
    new Property("IceDiscovery.Reply.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Reply.Router.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Reply.Router.Locator", false, "", false),
    new Property("IceDiscovery.Reply.Router.Router", false, "", false),
    new Property("IceDiscovery.Reply.Router.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Reply\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Reply.Router", false, "", false),
    new Property("IceDiscovery.Reply.ProxyOptions", false, "", false),
    new Property("IceDiscovery.Reply.ThreadPool.Size", false, "1", false),
    new Property("IceDiscovery.Reply.ThreadPool.SizeMax", false, "", false),
    new Property("IceDiscovery.Reply.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceDiscovery.Reply.ThreadPool.StackSize", false, "0", false),
    new Property("IceDiscovery.Reply.ThreadPool.Serialize", false, "0", false),
    new Property("IceDiscovery.Reply.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceDiscovery.Reply.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceDiscovery.Reply.MessageSizeMax", false, "", false),
    new Property("IceDiscovery.Locator.ACM.Timeout", false, "", false),
    new Property("IceDiscovery.Locator.ACM.Heartbeat", false, "", false),
    new Property("IceDiscovery.Locator.ACM.Close", false, "", false),
    new Property("IceDiscovery.Locator.ACM", false, "", false),
    new Property("IceDiscovery.Locator.AdapterId", false, "", false),
    new Property("IceDiscovery.Locator.Connection.CloseTimeout", false, "10", false),
    new Property("IceDiscovery.Locator.Connection.ConnectTimeout", false, "10", false),
    new Property("IceDiscovery.Locator.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceDiscovery.Locator.Connection.IdleTimeout", false, "60", false),
    new Property("IceDiscovery.Locator.Connection.InactivityTimeout", false, "300", false),
    new Property("IceDiscovery.Locator.Connection", false, "", false),
    new Property("IceDiscovery.Locator.Endpoints", false, "", false),
    new Property("IceDiscovery.Locator.Locator.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Locator.Locator.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Locator.Locator.PreferSecure", false, "", false),
    new Property("IceDiscovery.Locator.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Locator.Locator.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Locator.Locator.Locator", false, "", false),
    new Property("IceDiscovery.Locator.Locator.Router", false, "", false),
    new Property("IceDiscovery.Locator.Locator.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Locator\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Locator.Locator", false, "", false),
    new Property("IceDiscovery.Locator.PublishedEndpoints", false, "", false),
    new Property("IceDiscovery.Locator.ReplicaGroupId", false, "", false),
    new Property("IceDiscovery.Locator.Router.EndpointSelection", false, "", false),
    new Property("IceDiscovery.Locator.Router.ConnectionCached", false, "", false),
    new Property("IceDiscovery.Locator.Router.PreferSecure", false, "", false),
    new Property("IceDiscovery.Locator.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceDiscovery.Locator.Router.InvocationTimeout", false, "", false),
    new Property("IceDiscovery.Locator.Router.Locator", false, "", false),
    new Property("IceDiscovery.Locator.Router.Router", false, "", false),
    new Property("IceDiscovery.Locator.Router.CollocationOptimized", false, "", false),
    new Property("IceDiscovery\\.Locator\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceDiscovery.Locator.Router", false, "", false),
    new Property("IceDiscovery.Locator.ProxyOptions", false, "", false),
    new Property("IceDiscovery.Locator.ThreadPool.Size", false, "1", false),
    new Property("IceDiscovery.Locator.ThreadPool.SizeMax", false, "", false),
    new Property("IceDiscovery.Locator.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceDiscovery.Locator.ThreadPool.StackSize", false, "0", false),
    new Property("IceDiscovery.Locator.ThreadPool.Serialize", false, "0", false),
    new Property("IceDiscovery.Locator.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceDiscovery.Locator.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceDiscovery.Locator.MessageSizeMax", false, "", false),
    new Property("IceDiscovery.Lookup", false, "", false),
    new Property("IceDiscovery.Timeout", false, "300", false),
    new Property("IceDiscovery.RetryCount", false, "3", false),
    new Property("IceDiscovery.LatencyMultiplier", false, "1", false),
    new Property("IceDiscovery.Address", false, "", false),
    new Property("IceDiscovery.Port", false, "4061", false),
    new Property("IceDiscovery.Interface", false, "", false),
    new Property("IceDiscovery.DomainId", false, "", false),
    null
  };

  public static final Property IceLocatorDiscoveryProps[] = {
    new Property("IceLocatorDiscovery.Reply.ACM.Timeout", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ACM.Heartbeat", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ACM.Close", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ACM", false, "", false),
    new Property("IceLocatorDiscovery.Reply.AdapterId", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Connection.CloseTimeout", false, "10", false),
    new Property("IceLocatorDiscovery.Reply.Connection.ConnectTimeout", false, "10", false),
    new Property("IceLocatorDiscovery.Reply.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceLocatorDiscovery.Reply.Connection.IdleTimeout", false, "60", false),
    new Property("IceLocatorDiscovery.Reply.Connection.InactivityTimeout", false, "300", false),
    new Property("IceLocatorDiscovery.Reply.Connection", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Endpoints", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.EndpointSelection", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.ConnectionCached", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.PreferSecure", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.InvocationTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.Router", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator.CollocationOptimized", false, "", false),
    new Property("IceLocatorDiscovery\\.Reply\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceLocatorDiscovery.Reply.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Reply.PublishedEndpoints", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ReplicaGroupId", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.EndpointSelection", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.ConnectionCached", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.PreferSecure", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.InvocationTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.Router", false, "", false),
    new Property("IceLocatorDiscovery.Reply.Router.CollocationOptimized", false, "", false),
    new Property("IceLocatorDiscovery\\.Reply\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceLocatorDiscovery.Reply.Router", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ProxyOptions", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.Size", false, "1", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.SizeMax", false, "", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.StackSize", false, "0", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.Serialize", false, "0", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceLocatorDiscovery.Reply.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceLocatorDiscovery.Reply.MessageSizeMax", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ACM.Timeout", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ACM.Heartbeat", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ACM.Close", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ACM", false, "", false),
    new Property("IceLocatorDiscovery.Locator.AdapterId", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Connection.CloseTimeout", false, "10", false),
    new Property("IceLocatorDiscovery.Locator.Connection.ConnectTimeout", false, "10", false),
    new Property("IceLocatorDiscovery.Locator.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceLocatorDiscovery.Locator.Connection.IdleTimeout", false, "60", false),
    new Property("IceLocatorDiscovery.Locator.Connection.InactivityTimeout", false, "300", false),
    new Property("IceLocatorDiscovery.Locator.Connection", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Endpoints", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.EndpointSelection", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.ConnectionCached", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.PreferSecure", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.InvocationTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.Router", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator.CollocationOptimized", false, "", false),
    new Property("IceLocatorDiscovery\\.Locator\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceLocatorDiscovery.Locator.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Locator.PublishedEndpoints", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ReplicaGroupId", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.EndpointSelection", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.ConnectionCached", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.PreferSecure", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.InvocationTimeout", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.Locator", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.Router", false, "", false),
    new Property("IceLocatorDiscovery.Locator.Router.CollocationOptimized", false, "", false),
    new Property("IceLocatorDiscovery\\.Locator\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceLocatorDiscovery.Locator.Router", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ProxyOptions", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.Size", false, "1", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.SizeMax", false, "", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.StackSize", false, "0", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.Serialize", false, "0", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceLocatorDiscovery.Locator.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceLocatorDiscovery.Locator.MessageSizeMax", false, "", false),
    new Property("IceLocatorDiscovery.Lookup", false, "", false),
    new Property("IceLocatorDiscovery.Timeout", false, "", false),
    new Property("IceLocatorDiscovery.RetryCount", false, "3", false),
    new Property("IceLocatorDiscovery.RetryDelay", false, "2000", false),
    new Property("IceLocatorDiscovery.Address", false, "", false),
    new Property("IceLocatorDiscovery.Port", false, "4061", false),
    new Property("IceLocatorDiscovery.Interface", false, "", false),
    new Property("IceLocatorDiscovery.InstanceName", false, "IceLocatorDiscovery", false),
    new Property("IceLocatorDiscovery.Trace.Lookup", false, "0", false),
    null
  };

  public static final Property IceBoxProps[] = {
    new Property("IceBox.InheritProperties", false, "", false),
    new Property("IceBox.InstanceName", false, "IceBox", true),
    new Property("IceBox.LoadOrder", false, "", false),
    new Property("IceBox.PrintServicesReady", false, "", false),
    new Property("IceBox\\.Service\\.[^\\s]+", true, "", false),
    new Property("IceBox.ServiceManager.AdapterId", false, "", true),
    new Property("IceBox.ServiceManager.Endpoints", false, "", true),
    new Property("IceBox.ServiceManager.Locator", false, "", true),
    new Property("IceBox.ServiceManager.PublishedEndpoints", false, "", true),
    new Property("IceBox.ServiceManager.ReplicaGroupId", false, "", true),
    new Property("IceBox.ServiceManager.Router", false, "", true),
    new Property("IceBox.ServiceManager.ThreadPool.Size", false, "", true),
    new Property("IceBox.ServiceManager.ThreadPool.SizeMax", false, "", true),
    new Property("IceBox.ServiceManager.ThreadPool.SizeWarn", false, "", true),
    new Property("IceBox.ServiceManager.ThreadPool.StackSize", false, "", true),
    new Property("IceBox.Trace.ServiceObserver", false, "", false),
    new Property("IceBox\\.UseSharedCommunicator\\.[^\\s]+", true, "", false),
    null
  };

  public static final Property IceBoxAdminProps[] = {
    new Property("IceBoxAdmin.ServiceManager.Proxy.EndpointSelection", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.ConnectionCached", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.PreferSecure", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.LocatorCacheTimeout", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.InvocationTimeout", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.Locator", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.Router", false, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy.CollocationOptimized", false, "", false),
    new Property("IceBoxAdmin\\.ServiceManager\\.Proxy\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceBoxAdmin.ServiceManager.Proxy", false, "", false),
    null
  };

  public static final Property IceBridgeProps[] = {
    new Property("IceBridge.Source.ACM.Timeout", false, "", false),
    new Property("IceBridge.Source.ACM.Heartbeat", false, "", false),
    new Property("IceBridge.Source.ACM.Close", false, "", false),
    new Property("IceBridge.Source.ACM", false, "", false),
    new Property("IceBridge.Source.AdapterId", false, "", false),
    new Property("IceBridge.Source.Connection.CloseTimeout", false, "10", false),
    new Property("IceBridge.Source.Connection.ConnectTimeout", false, "10", false),
    new Property("IceBridge.Source.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceBridge.Source.Connection.IdleTimeout", false, "60", false),
    new Property("IceBridge.Source.Connection.InactivityTimeout", false, "300", false),
    new Property("IceBridge.Source.Connection", false, "", false),
    new Property("IceBridge.Source.Endpoints", false, "", false),
    new Property("IceBridge.Source.Locator.EndpointSelection", false, "", false),
    new Property("IceBridge.Source.Locator.ConnectionCached", false, "", false),
    new Property("IceBridge.Source.Locator.PreferSecure", false, "", false),
    new Property("IceBridge.Source.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceBridge.Source.Locator.InvocationTimeout", false, "", false),
    new Property("IceBridge.Source.Locator.Locator", false, "", false),
    new Property("IceBridge.Source.Locator.Router", false, "", false),
    new Property("IceBridge.Source.Locator.CollocationOptimized", false, "", false),
    new Property("IceBridge\\.Source\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceBridge.Source.Locator", false, "", false),
    new Property("IceBridge.Source.PublishedEndpoints", false, "", false),
    new Property("IceBridge.Source.ReplicaGroupId", false, "", false),
    new Property("IceBridge.Source.Router.EndpointSelection", false, "", false),
    new Property("IceBridge.Source.Router.ConnectionCached", false, "", false),
    new Property("IceBridge.Source.Router.PreferSecure", false, "", false),
    new Property("IceBridge.Source.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceBridge.Source.Router.InvocationTimeout", false, "", false),
    new Property("IceBridge.Source.Router.Locator", false, "", false),
    new Property("IceBridge.Source.Router.Router", false, "", false),
    new Property("IceBridge.Source.Router.CollocationOptimized", false, "", false),
    new Property("IceBridge\\.Source\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceBridge.Source.Router", false, "", false),
    new Property("IceBridge.Source.ProxyOptions", false, "", false),
    new Property("IceBridge.Source.ThreadPool.Size", false, "1", false),
    new Property("IceBridge.Source.ThreadPool.SizeMax", false, "", false),
    new Property("IceBridge.Source.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceBridge.Source.ThreadPool.StackSize", false, "0", false),
    new Property("IceBridge.Source.ThreadPool.Serialize", false, "0", false),
    new Property("IceBridge.Source.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceBridge.Source.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceBridge.Source.MessageSizeMax", false, "", false),
    new Property("IceBridge.Target.Endpoints", false, "", false),
    new Property("IceBridge.InstanceName", false, "IceBridge", false),
    null
  };

  public static final Property IceGridAdminProps[] = {
    new Property("IceGridAdmin.AuthenticateUsingSSL", false, "", false),
    new Property("IceGridAdmin.MetricsConfig", false, "", false),
    new Property("IceGridAdmin.Username", false, "", false),
    new Property("IceGridAdmin.Password", false, "", false),
    new Property("IceGridAdmin.Replica", false, "", false),
    new Property("IceGridAdmin.Host", false, "", false),
    new Property("IceGridAdmin.Port", false, "", false),
    new Property("IceGridAdmin.InstanceName", false, "IceGridAdmin", false),
    new Property("IceGridAdmin.Server.ACM.Timeout", false, "", false),
    new Property("IceGridAdmin.Server.ACM.Heartbeat", false, "", false),
    new Property("IceGridAdmin.Server.ACM.Close", false, "", false),
    new Property("IceGridAdmin.Server.ACM", false, "", false),
    new Property("IceGridAdmin.Server.AdapterId", false, "", false),
    new Property("IceGridAdmin.Server.Connection.CloseTimeout", false, "10", false),
    new Property("IceGridAdmin.Server.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGridAdmin.Server.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGridAdmin.Server.Connection.IdleTimeout", false, "60", false),
    new Property("IceGridAdmin.Server.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGridAdmin.Server.Connection", false, "", false),
    new Property("IceGridAdmin.Server.Endpoints", false, "", false),
    new Property("IceGridAdmin.Server.Locator.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Server.Locator.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Server.Locator.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Server.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Server.Locator.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Server.Locator.Locator", false, "", false),
    new Property("IceGridAdmin.Server.Locator.Router", false, "", false),
    new Property("IceGridAdmin.Server.Locator.CollocationOptimized", false, "", false),
    new Property("IceGridAdmin\\.Server\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Server.Locator", false, "", false),
    new Property("IceGridAdmin.Server.PublishedEndpoints", false, "", false),
    new Property("IceGridAdmin.Server.ReplicaGroupId", false, "", false),
    new Property("IceGridAdmin.Server.Router.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Server.Router.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Server.Router.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Server.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Server.Router.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Server.Router.Locator", false, "", false),
    new Property("IceGridAdmin.Server.Router.Router", false, "", false),
    new Property("IceGridAdmin.Server.Router.CollocationOptimized", false, "", false),
    new Property("IceGridAdmin\\.Server\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Server.Router", false, "", false),
    new Property("IceGridAdmin.Server.ProxyOptions", false, "", false),
    new Property("IceGridAdmin.Server.ThreadPool.Size", false, "1", false),
    new Property("IceGridAdmin.Server.ThreadPool.SizeMax", false, "", false),
    new Property("IceGridAdmin.Server.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGridAdmin.Server.ThreadPool.StackSize", false, "0", false),
    new Property("IceGridAdmin.Server.ThreadPool.Serialize", false, "0", false),
    new Property("IceGridAdmin.Server.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGridAdmin.Server.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGridAdmin.Server.MessageSizeMax", false, "", false),
    new Property("IceGridAdmin.Discovery.Address", false, "", false),
    new Property("IceGridAdmin.Discovery.Interface", false, "", false),
    new Property("IceGridAdmin.Discovery.Lookup", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ACM.Timeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ACM.Heartbeat", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ACM.Close", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ACM", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.AdapterId", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection.CloseTimeout", false, "10", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection.IdleTimeout", false, "60", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGridAdmin.Discovery.Reply.Connection", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Endpoints", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator.CollocationOptimized", false, "", false),
    new Property("IceGridAdmin\\.Discovery\\.Reply\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.PublishedEndpoints", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ReplicaGroupId", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router.CollocationOptimized", false, "", false),
    new Property("IceGridAdmin\\.Discovery\\.Reply\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Discovery.Reply.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ProxyOptions", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.Size", false, "1", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.SizeMax", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.StackSize", false, "0", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.Serialize", false, "0", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGridAdmin.Discovery.Reply.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGridAdmin.Discovery.Reply.MessageSizeMax", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ACM.Timeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ACM.Heartbeat", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ACM.Close", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ACM", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.AdapterId", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Connection.CloseTimeout", false, "10", false),
    new Property("IceGridAdmin.Discovery.Locator.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGridAdmin.Discovery.Locator.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGridAdmin.Discovery.Locator.Connection.IdleTimeout", false, "60", false),
    new Property(
        "IceGridAdmin.Discovery.Locator.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGridAdmin.Discovery.Locator.Connection", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Endpoints", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator.CollocationOptimized", false, "", false),
    new Property(
        "IceGridAdmin\\.Discovery\\.Locator\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.PublishedEndpoints", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ReplicaGroupId", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.EndpointSelection", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.ConnectionCached", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.PreferSecure", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.InvocationTimeout", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.Locator", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router.CollocationOptimized", false, "", false),
    new Property(
        "IceGridAdmin\\.Discovery\\.Locator\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGridAdmin.Discovery.Locator.Router", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ProxyOptions", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.Size", false, "1", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.SizeMax", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.StackSize", false, "0", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.Serialize", false, "0", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGridAdmin.Discovery.Locator.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGridAdmin.Discovery.Locator.MessageSizeMax", false, "", false),
    new Property("IceGridAdmin.Trace.Observers", false, "", false),
    new Property("IceGridAdmin.Trace.SaveToRegistry", false, "", false),
    null
  };

  public static final Property IceGridProps[] = {
    new Property("IceGrid.AdminRouter.ACM.Timeout", false, "", false),
    new Property("IceGrid.AdminRouter.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.AdminRouter.ACM.Close", false, "", false),
    new Property("IceGrid.AdminRouter.ACM", false, "", false),
    new Property("IceGrid.AdminRouter.AdapterId", false, "", false),
    new Property("IceGrid.AdminRouter.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.AdminRouter.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.AdminRouter.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.AdminRouter.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.AdminRouter.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.AdminRouter.Connection", false, "", false),
    new Property("IceGrid.AdminRouter.Endpoints", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.Locator", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.Router", false, "", false),
    new Property("IceGrid.AdminRouter.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.AdminRouter\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.AdminRouter.Locator", false, "", false),
    new Property("IceGrid.AdminRouter.PublishedEndpoints", false, "", false),
    new Property("IceGrid.AdminRouter.ReplicaGroupId", false, "", false),
    new Property("IceGrid.AdminRouter.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.AdminRouter.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.AdminRouter.Router.PreferSecure", false, "", false),
    new Property("IceGrid.AdminRouter.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.AdminRouter.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.AdminRouter.Router.Locator", false, "", false),
    new Property("IceGrid.AdminRouter.Router.Router", false, "", false),
    new Property("IceGrid.AdminRouter.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.AdminRouter\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.AdminRouter.Router", false, "", false),
    new Property("IceGrid.AdminRouter.ProxyOptions", false, "", false),
    new Property("IceGrid.AdminRouter.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.AdminRouter.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.AdminRouter.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.AdminRouter.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.AdminRouter.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.AdminRouter.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.AdminRouter.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.AdminRouter.MessageSizeMax", false, "", false),
    new Property("IceGrid.InstanceName", false, "IceGrid", false),
    new Property("IceGrid.Node.ACM.Timeout", false, "", false),
    new Property("IceGrid.Node.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Node.ACM.Close", false, "", false),
    new Property("IceGrid.Node.ACM", false, "", false),
    new Property("IceGrid.Node.AdapterId", false, "", false),
    new Property("IceGrid.Node.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Node.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Node.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Node.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.Node.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Node.Connection", false, "", false),
    new Property("IceGrid.Node.Endpoints", false, "", false),
    new Property("IceGrid.Node.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Node.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Node.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Node.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Node.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Node.Locator.Locator", false, "", false),
    new Property("IceGrid.Node.Locator.Router", false, "", false),
    new Property("IceGrid.Node.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Node\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Node.Locator", false, "", false),
    new Property("IceGrid.Node.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Node.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Node.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Node.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Node.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Node.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Node.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Node.Router.Locator", false, "", false),
    new Property("IceGrid.Node.Router.Router", false, "", false),
    new Property("IceGrid.Node.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Node\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Node.Router", false, "", false),
    new Property("IceGrid.Node.ProxyOptions", false, "", false),
    new Property("IceGrid.Node.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Node.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Node.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Node.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Node.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Node.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Node.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Node.MessageSizeMax", false, "", false),
    new Property("IceGrid.Node.AllowRunningServersAsRoot", false, "", false),
    new Property("IceGrid.Node.AllowEndpointsOverride", false, "0", false),
    new Property("IceGrid.Node.CollocateRegistry", false, "", false),
    new Property("IceGrid.Node.Data", false, "", false),
    new Property("IceGrid.Node.DisableOnFailure", false, "0", false),
    new Property("IceGrid.Node.Name", false, "", false),
    new Property("IceGrid.Node.Output", false, "", false),
    new Property("IceGrid.Node.ProcessorSocketCount", false, "", false),
    new Property("IceGrid.Node.PrintServersReady", false, "", false),
    new Property("IceGrid.Node.PropertiesOverride", false, "", false),
    new Property("IceGrid.Node.RedirectErrToOut", false, "0", false),
    new Property("IceGrid.Node.Trace.Activator", false, "0", false),
    new Property("IceGrid.Node.Trace.Adapter", false, "0", false),
    new Property("IceGrid.Node.Trace.Admin", false, "0", false),
    new Property("IceGrid.Node.Trace.Patch", false, "0", false),
    new Property("IceGrid.Node.Trace.Replica", false, "0", false),
    new Property("IceGrid.Node.Trace.Server", false, "0", false),
    new Property("IceGrid.Node.UserAccounts", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.EndpointSelection", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.ConnectionCached", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.PreferSecure", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.InvocationTimeout", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.Locator", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.Router", false, "", false),
    new Property("IceGrid.Node.UserAccountMapper.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Node\\.UserAccountMapper\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Node.UserAccountMapper", false, "", false),
    new Property("IceGrid.Node.WaitTime", false, "60", false),
    new Property("IceGrid.Registry.AdminCryptPasswords", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.Locator", false, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier.Router", false, "", false),
    new Property(
        "IceGrid.Registry.AdminPermissionsVerifier.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.AdminPermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.AdminPermissionsVerifier", false, "", false),
    new Property("IceGrid.Registry.AdminSessionFilters", false, "0", false),
    new Property("IceGrid.Registry.AdminSessionManager.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ACM", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.AdapterId", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Connection.CloseTimeout", false, "10", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Connection.ConnectTimeout", false, "10", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.AdminSessionManager.Connection.IdleTimeout", false, "60", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.AdminSessionManager.Connection", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Endpoints", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Locator.PreferSecure", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Locator.LocatorCacheTimeout", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Locator.Router", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Locator.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.AdminSessionManager\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Locator", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.PreferSecure", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router.Router", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.Router.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.AdminSessionManager\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.Router", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.AdminSessionManager.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.AdminSessionManager.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.AdminSessionManager.ThreadPool.Serialize", false, "0", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property(
        "IceGrid.Registry.AdminSessionManager.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.AdminSessionManager.MessageSizeMax", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSSLPermissionsVerifier.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.AdminSSLPermissionsVerifier.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.AdminSSLPermissionsVerifier.PreferSecure", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSSLPermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSSLPermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.AdminSSLPermissionsVerifier.Locator", false, "", false),
    new Property("IceGrid.Registry.AdminSSLPermissionsVerifier.Router", false, "", false),
    new Property(
        "IceGrid.Registry.AdminSSLPermissionsVerifier.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.AdminSSLPermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.AdminSSLPermissionsVerifier", false, "", false),
    new Property("IceGrid.Registry.Client.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.Client.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.Client.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.Client.ACM", false, "", false),
    new Property("IceGrid.Registry.Client.AdapterId", false, "", false),
    new Property("IceGrid.Registry.Client.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Registry.Client.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Registry.Client.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.Client.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.Registry.Client.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.Client.Connection", false, "", false),
    new Property("IceGrid.Registry.Client.Endpoints", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.Router", false, "", false),
    new Property("IceGrid.Registry.Client.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Client\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Client.Locator", false, "", false),
    new Property("IceGrid.Registry.Client.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.Client.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.Client.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Client.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Client.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Client.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Client.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Client.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.Client.Router.Router", false, "", false),
    new Property("IceGrid.Registry.Client.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Client\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Client.Router", false, "", false),
    new Property("IceGrid.Registry.Client.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.Client.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.Client.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.Client.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.Client.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.Client.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Registry.Client.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Registry.Client.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.Client.MessageSizeMax", false, "", false),
    new Property("IceGrid.Registry.CryptPasswords", false, "", false),
    new Property("IceGrid.Registry.DefaultTemplates", false, "", false),
    new Property("IceGrid.Registry.Discovery.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.Discovery.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.Discovery.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.Discovery.ACM", false, "", false),
    new Property("IceGrid.Registry.Discovery.AdapterId", false, "", false),
    new Property("IceGrid.Registry.Discovery.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Registry.Discovery.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Registry.Discovery.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.Discovery.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.Registry.Discovery.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.Discovery.Connection", false, "", false),
    new Property("IceGrid.Registry.Discovery.Endpoints", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.Router", false, "", false),
    new Property("IceGrid.Registry.Discovery.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Discovery\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Discovery.Locator", false, "", false),
    new Property("IceGrid.Registry.Discovery.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.Discovery.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.Router", false, "", false),
    new Property("IceGrid.Registry.Discovery.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Discovery\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Discovery.Router", false, "", false),
    new Property("IceGrid.Registry.Discovery.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Registry.Discovery.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.Discovery.MessageSizeMax", false, "", false),
    new Property("IceGrid.Registry.Discovery.Enabled", false, "1", false),
    new Property("IceGrid.Registry.Discovery.Address", false, "", false),
    new Property("IceGrid.Registry.Discovery.Port", false, "4061", false),
    new Property("IceGrid.Registry.Discovery.Interface", false, "", false),
    new Property("IceGrid.Registry.DynamicRegistration", false, "", false),
    new Property("IceGrid.Registry.Internal.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.Internal.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.Internal.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.Internal.ACM", false, "", false),
    new Property("IceGrid.Registry.Internal.AdapterId", false, "", false),
    new Property("IceGrid.Registry.Internal.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Registry.Internal.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Registry.Internal.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.Internal.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.Registry.Internal.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.Internal.Connection", false, "", false),
    new Property("IceGrid.Registry.Internal.Endpoints", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.Router", false, "", false),
    new Property("IceGrid.Registry.Internal.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Internal\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Internal.Locator", false, "", false),
    new Property("IceGrid.Registry.Internal.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.Internal.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.Router", false, "", false),
    new Property("IceGrid.Registry.Internal.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Internal\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Internal.Router", false, "", false),
    new Property("IceGrid.Registry.Internal.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Registry.Internal.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.Internal.MessageSizeMax", false, "", false),
    new Property("IceGrid.Registry.LMDB.MapSize", false, "", false),
    new Property("IceGrid.Registry.LMDB.Path", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.Locator", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.Router", false, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.PermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.PermissionsVerifier", false, "", false),
    new Property("IceGrid.Registry.ReplicaName", false, "Master", false),
    new Property("IceGrid.Registry.Server.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.Server.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.Server.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.Server.ACM", false, "", false),
    new Property("IceGrid.Registry.Server.AdapterId", false, "", false),
    new Property("IceGrid.Registry.Server.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Registry.Server.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Registry.Server.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.Server.Connection.IdleTimeout", false, "60", false),
    new Property("IceGrid.Registry.Server.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.Server.Connection", false, "", false),
    new Property("IceGrid.Registry.Server.Endpoints", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.Router", false, "", false),
    new Property("IceGrid.Registry.Server.Locator.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Server\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Server.Locator", false, "", false),
    new Property("IceGrid.Registry.Server.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.Server.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.Server.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.Server.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.Server.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.Server.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.Server.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.Server.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.Server.Router.Router", false, "", false),
    new Property("IceGrid.Registry.Server.Router.CollocationOptimized", false, "", false),
    new Property("IceGrid\\.Registry\\.Server\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.Server.Router", false, "", false),
    new Property("IceGrid.Registry.Server.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.Server.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.Server.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.Server.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.Server.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.Server.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Registry.Server.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Registry.Server.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.Server.MessageSizeMax", false, "", false),
    new Property("IceGrid.Registry.SessionFilters", false, "0", false),
    new Property("IceGrid.Registry.SessionManager.ACM.Timeout", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ACM.Heartbeat", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ACM.Close", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ACM", false, "", false),
    new Property("IceGrid.Registry.SessionManager.AdapterId", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Connection.CloseTimeout", false, "10", false),
    new Property("IceGrid.Registry.SessionManager.Connection.ConnectTimeout", false, "10", false),
    new Property("IceGrid.Registry.SessionManager.Connection.EnableIdleCheck", false, "1", false),
    new Property("IceGrid.Registry.SessionManager.Connection.IdleTimeout", false, "60", false),
    new Property(
        "IceGrid.Registry.SessionManager.Connection.InactivityTimeout", false, "300", false),
    new Property("IceGrid.Registry.SessionManager.Connection", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Endpoints", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.Locator", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.Router", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.SessionManager\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.SessionManager.Locator", false, "", false),
    new Property("IceGrid.Registry.SessionManager.PublishedEndpoints", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ReplicaGroupId", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.Locator", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.Router", false, "", false),
    new Property("IceGrid.Registry.SessionManager.Router.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.SessionManager\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.SessionManager.Router", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ProxyOptions", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.Size", false, "1", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.SizeMax", false, "", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.SizeWarn", false, "0", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.StackSize", false, "0", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.Serialize", false, "0", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("IceGrid.Registry.SessionManager.ThreadPool.ThreadPriority", false, "", false),
    new Property("IceGrid.Registry.SessionManager.MessageSizeMax", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.EndpointSelection", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.ConnectionCached", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.PreferSecure", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.Locator", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.Router", false, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier.CollocationOptimized", false, "", false),
    new Property(
        "IceGrid\\.Registry\\.SSLPermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("IceGrid.Registry.SSLPermissionsVerifier", false, "", false),
    new Property("IceGrid.Registry.Trace.Admin", false, "0", false),
    new Property("IceGrid.Registry.Trace.Application", false, "0", false),
    new Property("IceGrid.Registry.Trace.Adapter", false, "0", false),
    new Property("IceGrid.Registry.Trace.Discovery", false, "0", false),
    new Property("IceGrid.Registry.Trace.Locator", false, "0", false),
    new Property("IceGrid.Registry.Trace.Node", false, "0", false),
    new Property("IceGrid.Registry.Trace.Object", false, "0", false),
    new Property("IceGrid.Registry.Trace.Patch", false, "0", false),
    new Property("IceGrid.Registry.Trace.Replica", false, "0", false),
    new Property("IceGrid.Registry.Trace.Server", false, "0", false),
    new Property("IceGrid.Registry.Trace.Session", false, "0", false),
    new Property("IceGrid.Registry.Trace.Subscriber", false, "0", false),
    new Property("IceGrid.Registry.Trace.Topic", false, "0", false),
    new Property("IceGrid.Registry.Trace.TopicManager", false, "0", false),
    new Property("IceGrid.Registry.UserAccounts", false, "", false),
    null
  };

  public static final Property IceSSLProps[] = {
    new Property("IceSSL.Alias", false, "", false),
    new Property("IceSSL.CAs", false, "", false),
    new Property("IceSSL.CertStore", false, "My", false),
    new Property("IceSSL.CertStoreLocation", false, "CurrentUser", false),
    new Property("IceSSL.CertFile", false, "", false),
    new Property("IceSSL.CheckCertName", false, "0", false),
    new Property("IceSSL.CheckCRL", false, "0", false),
    new Property("IceSSL.CertificateRevocationListFiles", false, "", false),
    new Property("IceSSL.DefaultDir", false, "", false),
    new Property("IceSSL.FindCert", false, "", false),
    new Property("IceSSL.KeyFile", false, "", false),
    new Property("IceSSL.Keychain", false, "", false),
    new Property("IceSSL.KeychainPassword", false, "", false),
    new Property("IceSSL.Keystore", false, "", false),
    new Property("IceSSL.KeystorePassword", false, "", false),
    new Property("IceSSL.KeystoreType", false, "", false),
    new Property("IceSSL.Password", false, "", false),
    new Property("IceSSL.RevocationCheck", false, "0", false),
    new Property("IceSSL.RevocationCheckCacheOnly", false, "0", false),
    new Property("IceSSL.Trace.Security", false, "0", false),
    new Property("IceSSL.TrustOnly", false, "", false),
    new Property("IceSSL.TrustOnly.Client", false, "", false),
    new Property("IceSSL.TrustOnly.Server", false, "", false),
    new Property("IceSSL\\.TrustOnly\\.Server\\.[^\\s]+", true, "", false),
    new Property("IceSSL.Truststore", false, "", false),
    new Property("IceSSL.TruststorePassword", false, "", false),
    new Property("IceSSL.TruststoreType", false, "JKS", false),
    new Property("IceSSL.UsePlatformCAs", false, "0", false),
    new Property("IceSSL.VerifyPeer", false, "2", false),
    null
  };

  public static final Property IceStormAdminProps[] = {
    new Property("IceStormAdmin\\.TopicManager\\.[^\\s]+", true, "", false),
    new Property("IceStormAdmin.Host", false, "", false),
    new Property("IceStormAdmin.Port", false, "", false),
    null
  };

  public static final Property IceBTProps[] = {
    new Property("IceBT.RcvSize", false, "", false),
    new Property("IceBT.SndSize", false, "", false),
    null
  };

  public static final Property Glacier2Props[] = {
    new Property("Glacier2.AddConnectionContext", false, "0", false),
    new Property("Glacier2.Client.ACM.Timeout", false, "", false),
    new Property("Glacier2.Client.ACM.Heartbeat", false, "", false),
    new Property("Glacier2.Client.ACM.Close", false, "", false),
    new Property("Glacier2.Client.ACM", false, "", false),
    new Property("Glacier2.Client.AdapterId", false, "", false),
    new Property("Glacier2.Client.Connection.CloseTimeout", false, "10", false),
    new Property("Glacier2.Client.Connection.ConnectTimeout", false, "10", false),
    new Property("Glacier2.Client.Connection.EnableIdleCheck", false, "1", false),
    new Property("Glacier2.Client.Connection.IdleTimeout", false, "60", false),
    new Property("Glacier2.Client.Connection.InactivityTimeout", false, "300", false),
    new Property("Glacier2.Client.Connection", false, "", false),
    new Property("Glacier2.Client.Endpoints", false, "", false),
    new Property("Glacier2.Client.Locator.EndpointSelection", false, "", false),
    new Property("Glacier2.Client.Locator.ConnectionCached", false, "", false),
    new Property("Glacier2.Client.Locator.PreferSecure", false, "", false),
    new Property("Glacier2.Client.Locator.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.Client.Locator.InvocationTimeout", false, "", false),
    new Property("Glacier2.Client.Locator.Locator", false, "", false),
    new Property("Glacier2.Client.Locator.Router", false, "", false),
    new Property("Glacier2.Client.Locator.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.Client\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.Client.Locator", false, "", false),
    new Property("Glacier2.Client.PublishedEndpoints", false, "", false),
    new Property("Glacier2.Client.ReplicaGroupId", false, "", false),
    new Property("Glacier2.Client.Router.EndpointSelection", false, "", false),
    new Property("Glacier2.Client.Router.ConnectionCached", false, "", false),
    new Property("Glacier2.Client.Router.PreferSecure", false, "", false),
    new Property("Glacier2.Client.Router.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.Client.Router.InvocationTimeout", false, "", false),
    new Property("Glacier2.Client.Router.Locator", false, "", false),
    new Property("Glacier2.Client.Router.Router", false, "", false),
    new Property("Glacier2.Client.Router.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.Client\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.Client.Router", false, "", false),
    new Property("Glacier2.Client.ProxyOptions", false, "", false),
    new Property("Glacier2.Client.ThreadPool.Size", false, "1", false),
    new Property("Glacier2.Client.ThreadPool.SizeMax", false, "", false),
    new Property("Glacier2.Client.ThreadPool.SizeWarn", false, "0", false),
    new Property("Glacier2.Client.ThreadPool.StackSize", false, "0", false),
    new Property("Glacier2.Client.ThreadPool.Serialize", false, "0", false),
    new Property("Glacier2.Client.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("Glacier2.Client.ThreadPool.ThreadPriority", false, "", false),
    new Property("Glacier2.Client.MessageSizeMax", false, "", false),
    new Property("Glacier2.Client.Buffered", false, "1", false),
    new Property("Glacier2.Client.ForwardContext", false, "0", false),
    new Property("Glacier2.Client.SleepTime", false, "0", false),
    new Property("Glacier2.Client.Trace.Override", false, "0", false),
    new Property("Glacier2.Client.Trace.Reject", false, "0", false),
    new Property("Glacier2.Client.Trace.Request", false, "0", false),
    new Property("Glacier2.CryptPasswords", false, "", false),
    new Property("Glacier2.Filter.Address.Reject", false, "", false),
    new Property("Glacier2.Filter.Address.Accept", false, "", false),
    new Property("Glacier2.Filter.ProxySizeMax", false, "", false),
    new Property("Glacier2.Filter.Category.Accept", false, "", false),
    new Property("Glacier2.Filter.Category.AcceptUser", false, "", false),
    new Property("Glacier2.Filter.AdapterId.Accept", false, "", false),
    new Property("Glacier2.Filter.Identity.Accept", false, "", false),
    new Property("Glacier2.InstanceName", false, "Glacier2", false),
    new Property("Glacier2.PermissionsVerifier.EndpointSelection", false, "", false),
    new Property("Glacier2.PermissionsVerifier.ConnectionCached", false, "", false),
    new Property("Glacier2.PermissionsVerifier.PreferSecure", false, "", false),
    new Property("Glacier2.PermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.PermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("Glacier2.PermissionsVerifier.Locator", false, "", false),
    new Property("Glacier2.PermissionsVerifier.Router", false, "", false),
    new Property("Glacier2.PermissionsVerifier.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.PermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.PermissionsVerifier", false, "", false),
    new Property("Glacier2.ReturnClientProxy", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.EndpointSelection", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.ConnectionCached", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.PreferSecure", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.InvocationTimeout", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.Locator", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.Router", false, "", false),
    new Property("Glacier2.SSLPermissionsVerifier.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.SSLPermissionsVerifier\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.SSLPermissionsVerifier", false, "", false),
    new Property("Glacier2.RoutingTable.MaxSize", false, "1000", false),
    new Property("Glacier2.Server.ACM.Timeout", false, "", false),
    new Property("Glacier2.Server.ACM.Heartbeat", false, "", false),
    new Property("Glacier2.Server.ACM.Close", false, "", false),
    new Property("Glacier2.Server.ACM", false, "", false),
    new Property("Glacier2.Server.AdapterId", false, "", false),
    new Property("Glacier2.Server.Connection.CloseTimeout", false, "10", false),
    new Property("Glacier2.Server.Connection.ConnectTimeout", false, "10", false),
    new Property("Glacier2.Server.Connection.EnableIdleCheck", false, "1", false),
    new Property("Glacier2.Server.Connection.IdleTimeout", false, "60", false),
    new Property("Glacier2.Server.Connection.InactivityTimeout", false, "300", false),
    new Property("Glacier2.Server.Connection", false, "", false),
    new Property("Glacier2.Server.Endpoints", false, "", false),
    new Property("Glacier2.Server.Locator.EndpointSelection", false, "", false),
    new Property("Glacier2.Server.Locator.ConnectionCached", false, "", false),
    new Property("Glacier2.Server.Locator.PreferSecure", false, "", false),
    new Property("Glacier2.Server.Locator.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.Server.Locator.InvocationTimeout", false, "", false),
    new Property("Glacier2.Server.Locator.Locator", false, "", false),
    new Property("Glacier2.Server.Locator.Router", false, "", false),
    new Property("Glacier2.Server.Locator.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.Server\\.Locator\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.Server.Locator", false, "", false),
    new Property("Glacier2.Server.PublishedEndpoints", false, "", false),
    new Property("Glacier2.Server.ReplicaGroupId", false, "", false),
    new Property("Glacier2.Server.Router.EndpointSelection", false, "", false),
    new Property("Glacier2.Server.Router.ConnectionCached", false, "", false),
    new Property("Glacier2.Server.Router.PreferSecure", false, "", false),
    new Property("Glacier2.Server.Router.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.Server.Router.InvocationTimeout", false, "", false),
    new Property("Glacier2.Server.Router.Locator", false, "", false),
    new Property("Glacier2.Server.Router.Router", false, "", false),
    new Property("Glacier2.Server.Router.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.Server\\.Router\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.Server.Router", false, "", false),
    new Property("Glacier2.Server.ProxyOptions", false, "", false),
    new Property("Glacier2.Server.ThreadPool.Size", false, "1", false),
    new Property("Glacier2.Server.ThreadPool.SizeMax", false, "", false),
    new Property("Glacier2.Server.ThreadPool.SizeWarn", false, "0", false),
    new Property("Glacier2.Server.ThreadPool.StackSize", false, "0", false),
    new Property("Glacier2.Server.ThreadPool.Serialize", false, "0", false),
    new Property("Glacier2.Server.ThreadPool.ThreadIdleTime", false, "60", false),
    new Property("Glacier2.Server.ThreadPool.ThreadPriority", false, "", false),
    new Property("Glacier2.Server.MessageSizeMax", false, "", false),
    new Property("Glacier2.Server.Buffered", false, "1", false),
    new Property("Glacier2.Server.ForwardContext", false, "0", false),
    new Property("Glacier2.Server.SleepTime", false, "0", false),
    new Property("Glacier2.Server.Trace.Override", false, "0", false),
    new Property("Glacier2.Server.Trace.Request", false, "0", false),
    new Property("Glacier2.SessionManager.EndpointSelection", false, "", false),
    new Property("Glacier2.SessionManager.ConnectionCached", false, "", false),
    new Property("Glacier2.SessionManager.PreferSecure", false, "", false),
    new Property("Glacier2.SessionManager.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.SessionManager.InvocationTimeout", false, "", false),
    new Property("Glacier2.SessionManager.Locator", false, "", false),
    new Property("Glacier2.SessionManager.Router", false, "", false),
    new Property("Glacier2.SessionManager.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.SessionManager\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.SessionManager", false, "", false),
    new Property("Glacier2.SSLSessionManager.EndpointSelection", false, "", false),
    new Property("Glacier2.SSLSessionManager.ConnectionCached", false, "", false),
    new Property("Glacier2.SSLSessionManager.PreferSecure", false, "", false),
    new Property("Glacier2.SSLSessionManager.LocatorCacheTimeout", false, "", false),
    new Property("Glacier2.SSLSessionManager.InvocationTimeout", false, "", false),
    new Property("Glacier2.SSLSessionManager.Locator", false, "", false),
    new Property("Glacier2.SSLSessionManager.Router", false, "", false),
    new Property("Glacier2.SSLSessionManager.CollocationOptimized", false, "", false),
    new Property("Glacier2\\.SSLSessionManager\\.Context\\.[^\\s]+", true, "", false),
    new Property("Glacier2.SSLSessionManager", false, "", false),
    new Property("Glacier2.Trace.RoutingTable", false, "0", false),
    new Property("Glacier2.Trace.Session", false, "0", false),
    null
  };

  public static final Property Glacier2CryptPermissionsVerifierProps[] = {
    new Property(
        "Glacier2CryptPermissionsVerifier\\.[^\\s]+\\.PermissionsVerifier", true, "", false),
    new Property(
        "Glacier2CryptPermissionsVerifier\\.[^\\s]+\\.AdminPermissionsVerifier", true, "", false),
    null
  };

  public static final Property[] validProps[] = {
    IceProps,
    IceMXProps,
    IceDiscoveryProps,
    IceLocatorDiscoveryProps,
    IceBoxProps,
    IceBoxAdminProps,
    IceBridgeProps,
    IceGridAdminProps,
    IceGridProps,
    IceSSLProps,
    IceStormAdminProps,
    IceBTProps,
    Glacier2Props,
    Glacier2CryptPermissionsVerifierProps,
    null
  };

  public static final String clPropNames[] = {
    "Ice",
    "IceMX",
    "IceDiscovery",
    "IceLocatorDiscovery",
    "IceBox",
    "IceBoxAdmin",
    "IceBridge",
    "IceGridAdmin",
    "IceGrid",
    "IceSSL",
    "IceStormAdmin",
    "IceBT",
    "Glacier2",
    "Glacier2CryptPermissionsVerifier",
    null
  };
}
