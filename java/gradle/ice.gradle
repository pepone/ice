// Copyright (c) ZeroC, Inc.

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: "gradle.plugin.com.zeroc.gradle.ice-builder", name: 'slice', version: "1.5.0"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.25.0"
    }
}

apply plugin: com.zeroc.gradle.icebuilder.slice.SlicePlugin
apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

slice {
    cppConfiguration = project.cppConfiguration
    cppPlatform = project.cppPlatform
    iceHome = new File(project.ext.topSrcDir).getCanonicalPath()
}

spotless {
  format 'misc', {
    // define the files to apply `misc` to
    target '*.java', '*.gradle'

    // define the steps to apply to those files
    trimTrailingWhitespace()
    endWithNewline()
  }

  java {
    toggleOffOn()

    target project.fileTree("src/main/java") {
        include '**/*.java'
        exclude 'com/zeroc/Ice/PropertyNames.java'
    }

    // Remove any unused imports, then ensure the remaining imports are correctly ordered.
    removeUnusedImports()

    // Linting
    cleanthat()

    // We use google-java-format to format our Java code. We also set reorderImports and formatJavadoc to true to
    // match the default behavior of the google-java-format tool.
    // When updating the version be sure to update the version in `.vscode/settings.json` as well.
    googleJavaFormat("1.24.0").aosp().reorderImports(true).formatJavadoc(true)
    formatAnnotations()
  }
}

// Android does not have a compileJava task
if(!(project.hasProperty('android') && project.android.sourceSets)) {
    compileJava {
        // Set the target release using the --release option
        options.compilerArgs.addAll(['--release', "${targetJavaRelease}"])
        options.debug = debug
    }
}

ext.libDir = "$rootProject.projectDir/lib"
